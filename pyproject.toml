[tool.poetry]
name = "argus-alm"
version = "0.15.0"
description = "Argus"
authors = ["Alexey Kartashov <alexey.kartashov@scylladb.com>", "Łukasz Sójka <lukasz.sojka@scylladb.com>"]
license = "Apache-2.0"
repository = "https://github.com/scylladb/argus"
readme = "README.md"
packages = [
    { include = "argus/client" },
    { include = "argus/common" },
    { include = "argus/__init__.py" },
]
exclude = ["argus/client/tests"]

[tool.poetry.group.web-backend]
optional = true

[tool.poetry.group.docker-image]
optional = true

[tool.poetry.dependencies]
requests = "^2.26.0"
python = "^3.10"
click = "^8.1.3"

[tool.poetry.scripts]
argus-client-generic = 'argus.client.generic.cli:cli'
argus-driver-matrix-client = 'argus.client.driver_matrix_tests.cli:cli'

[tool.poetry.group.web-backend.dependencies]
PyYAML = "^6.0.0"
scylla-driver = "^3.26.8"
Flask = "^3.0.0"
Flask-WTF = "^1.0.0"
Flask-Login = "^0.5.0"
humanize = "^3.13.1"
python-magic = "^0.4.24"
uwsgi = "^2.0.20"
python-jenkins = "^1.7.0"
python-slugify = "^6.1.1"
pygithub = "^2.6.1"
boto3 = "^1.38.9"

[tool.poetry.group.docker-image.dependencies]
supervisor = "^4.2.4"

[tool.poetry.group.dev.dependencies]
boto3-stubs = {extras = ["s3"], version = "^1.38.9"}
coverage = "5.5"
docker = "7.1.0"
pytest = "6.2.5"
ipython = "^8.1"
pre-commit = "^4.2.0"
ruff = "^0.11.9"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
lint.select = [
    "BLE",
    "F401", "F821", "F823", "F841",
    "PL", "PLR0913","PLR0914", "PLR0916",
    "YTT",
    "F541",
    "PIE",
    "B006",
]
exclude = ["argus/"]
lint.ignore = ["E501", "PLR2004"]

target-version = "py310"

force-exclude = true
line-length = 120
respect-gitignore = true

lint.preview = true
lint.explicit-preview-rules = true

[tool.ruff.lint.pylint]
max-args = 12
max-statements = 100
max-branches = 24
max-locals = 15

[tool.autopep8]
max_line_length = 120
ignore = "E226,E24,W50,W690,E402,E731"

[tool.pytest.ini_options]
markers = [
    "docker_required: this test requires docker and docker-compose",
]
log_cli = true
log_cli_level = "INFO"
